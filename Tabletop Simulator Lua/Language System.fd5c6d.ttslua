
local LANGUAGE = Global.getTable('GAME_LANGUAGE')

LANGUAGE_BUTTON_INDICES = {
    US = nil,
    RU = nil,
    FR = nil,
    ES = nil
}

LANGUAGES_GUIDS = {
  ["English"] = {
    -- Rulebook
    "54456f",
    -- Official cards box
    "cf0618",
    -- Eternal Piles
    "130b23",
    -- Box Expansions
    "dd6f16",
    "85b402",
    "29487d",
    "b3ed1e",
    "6b570f",
    "9e2b6c",
    "b7537f",
    "79f77f",
    "cd073d",
    -- Booster Expansions
    "25c0bc",
    "f16000",
    "31f975",
    "8ad698",
    "2a72bc",
    "e2ac3d",
    "711381",
    "999fa9",
    "e0e77c",
    -- Gamemodes
    "24d04a",
    "416011",
    "e9d4dd",
    "7bbdb4",
    "9a088b"
  },
  ["Russian"] = {
    -- Rulebook
    "6df828",
    -- Eternal Piles
    "c41988",
    -- Box Expansions
    "711262",
    "88dc4a",
    "65460b",
    "b48182",
    -- Official cards box
    "d91f32"
  },
  ["France"] = {
    -- Official cards box
    "8d0c2f",
    -- Rulebook
    "54456f"
  }
}

curLanguage = "English"
langChanging = false

local function createButtons()
  self.createButton({
    click_function = 'switchToFrance',
    function_owner = self,
    --label = "",
    label = "✘",                        --TODO DELETE
    font_color = {0.8, 0, 0},           --TODO DELETE
    position = {-13.75, 1.1, 0.5},
    width = 400,
    height = 400,
    --font_size = 350,
    font_size = 400                     --TODO DELETE
  })
  LANGUAGE_BUTTON_INDICES.FR = 1

  self.createButton({
    click_function = 'switchToRussian',
    function_owner = self,
    label = "",
    position = {-10.75, 1.1, 0.5},
    width = 400,
    height = 400,
    font_size = 350,
  })
  LANGUAGE_BUTTON_INDICES.RU = 2

  self.createButton({
    click_function = 'switchToEnglish',
    function_owner = self,
    label = "",
    position = {-7.75, 1.1, 0.5},
    width = 400,
    height = 400,
    font_size = 350,
  })
  LANGUAGE_BUTTON_INDICES.US = 3

  self.createButton({
    click_function = 'switchToSpanish',
    function_owner = self,
    label = "",
    position = {-4.75, 1.1, 0.5},
    width = 400,
    height = 400,
    font_size = 350,
  })
  LANGUAGE_BUTTON_INDICES.ES = 4
end

function onLoad(saved_data)
    createButtons()
    if saved_data ~= "" then
        local loaded_data = JSON.decode(saved_data)
        if loaded_data[1] then
            for _, language in pairs(LANGUAGE) do
                if loaded_data[1] == language then
                    switchLang(loaded_data[1])
                    return
                end
            end
            switchLang(LANGUAGE.US)
        else
            switchLang(LANGUAGE.US)
        end
    else
        switchLang(LANGUAGE.US)
    end
end

function onSave()
    return JSON.encode({Global.getVar("gameLanguage")})
end

function switchToEnglish()
    if Global.call("hasGameStarted") then
        return
    end
    switchLang(LANGUAGE.US)
end

function switchToRussian()
    if Global.call("hasGameStarted") then
        return
    end
    switchLang(LANGUAGE.RU)
end

function switchToFrance()
    --TODO Delete if france cards are added
        if true then
            return
        end

    if Global.call("hasGameStarted") then
        return
    end
    switchLang(LANGUAGE.FR)
end

function switchToSpanish()
    if Global.call("hasGameStarted") then
        return
    end
    switchLang(LANGUAGE.ES)
end

function switchLang(newLang)
    if Global.getVar("gameLanguage") == newLang then
        return
    end

    for lang, index in pairs(LANGUAGE_BUTTON_INDICES) do
        if LANGUAGE[lang] ~= newLang then
            if LANGUAGE[lang] ~= LANGUAGE.FR then               --TODO DELETE
                self.editButton({index=index-1, label=""})
            end
        end
    end
    self.editButton({index=LANGUAGE_BUTTON_INDICES[newLang]-1, label="✓", font_color={0, 0, 0}, font_size=350})
    Global.call("setGameLanguage", {language = newLang})

  --langChanging = true
  --changeLangObjsVisibility(curLanguage, true)
  --delayedCall("selectLangDelayed", 0.3, { exLang = exLang })
  --curLanguage = exLang
end

function selectLangDelayed(params)
  changeLangObjsVisibility(params.exLang, false)
  delayedCall("selectLangEnd", 0.3)
end

function selectLangEnd(params)
  langChanging = false
end

function changeLangObjsVisibility(lang, hide)
  yOffset = hide and -50 or 50
  for _, guid in pairs(LANGUAGES_GUIDS[lang]) do
    local obj = getObjectFromGUID(guid)
    if obj ~= nil then
      local curPos = obj.getPosition()
      curPos.y = curPos.y + yOffset
      obj.setPositionSmooth(curPos, false, true)
      obj.setLock(hide)
    end
  end
end

numTimers = 0
function delayedCall(funcName, delayTime, parameters)
    local uniqueID = 'timer'..numTimers
    numTimers = numTimers + 1
    Timer.create( {
        identifier = uniqueID,
        function_name = funcName,
        delay = delayTime,
        parameters = parameters } )
end